// Layout / Container / Mixins

// Gutter
@mixin container__gutter($gutter: $container-gutter, $gutter-bp: $container-gutter-bp, $bp: true) {
  padding-right: $gutter;
  padding-left: $gutter;

  @if($bp--enabled == true and $bp == true) {
    // loop through each breakpoint
    @each $bp-name, $bp-value in $bp-map {
      // set container gutter
      @include bp($bp-value) {
        // @include container-gutter(map-get($gutter-bp, $bp-name));
        $gutter: map-get($gutter-bp, $bp-name);
        padding-right: $gutter;
        padding-left: $gutter;
      }
    }
  }
}


@mixin container__gutter--classes($gutter: $container__gutter, $gutter--bp: $container__gutter--bp, $bp: false) {
  @include container__gutter($gutter, $gutter--bp, $bp);
}





// Max Width
@mixin container__max-width($max-width: $container__max-width, $max-width--bp: $container__max-width--bp, $bp: true) {
  max-width: $max-width;

  @if($bp--enabled == true and $bp == true) {
    // loop through each breakpoint
    @each $bp-name, $bp-value in $bp-map {
      // set container gutter
      @include bp($bp-value) {
        // @include container-max-width($max-width);
        $max-width: map-get($max-width--bp, $bp-name);
        max-width: $max-width;
      }
    }
  }
}


@mixin container__max-width--classes($max-width: $container__max-width, $max-width--bp: $container__max-width--bp, $bp: false) {
  @include container__max-width($max-width, $max-width--bp, $bp)
}





// Align
@mixin container__align($align: $container__align, $align--bp: $container__align--bp, $bp: true) {
  @if($align == center) {
    margin-right: auto;
    margin-left: auto;

  } @elseif($align == right) {
    margin-right: 0;
    margin-left: auto;

  } @elseif($align == left) {
    margin-right: auto;
    margin-left: 0;
  }

  @if($bp--enabled == true and $bp == true) {
    // loop through each breakpoint
    @each $bp-name, $bp-value in $bp-map {
      // set container gutter
      @include bp($bp-value) {
        // @include container-align(map-get($align-bp, $bp-name));
        $align: map-get($align--bp, $bp-name);

        @if($align == center) {
          margin-right: auto;
          margin-left: auto;

        } @elseif($align == right) {
          margin-right: 0;
          margin-left: auto;

        } @elseif($align == left) {
          margin-right: auto;
          margin-left: 0;
        }
      }
    }
  }
}


@mixin container__align--classes($align: $container__align, $align-bp: $container__align--bp, $bp: false) {
  @include container__align($align, $align-bp, $bp);
}


@mixin container(
$gutter: $container__gutter,
$gutter--bp: $container__gutter--bp,
$max-width: $container__max-width,
$max-width--bp: $container__max-width--bp,
$align: $container__align,
$align--bp: $container__align--bp,
$bp: true) {
  @include container__gutter($gutter, $gutter--bp, $bp);
  @include container__max-width($max-width, $max-width--bp, $bp);
  @include container__align($align, $align--bp, $bp);
}
