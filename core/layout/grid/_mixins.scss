// Mixins

// Rows
@mixin grid-row($gutter: $grid-gutter) {
  @include clearfix;
  margin-right: rem(-$gutter / 2);
  margin-left: rem(-$gutter / 2);
}

// Columns
@mixin grid-column($columns: 1, $offset: null, $push: null, $pull: null, $align: null) {
  width: percentage($columns / $grid-columns);

  @if($grid-classes == false) {
    padding-right: rem($grid-gutter / 2);
    padding-left: rem($grid-gutter / 2);
    float: left;
  }

  @if($offset) {
    @include grid-offset($offset);
  }

  @if($push) {
    @include grid-push($push);
  }

  @if($pull) {
    @include grid-pull($pull);
  }

  @if($align) {
    @include grid-align($align);
  }
}

// Offset
@mixin grid-offset($columns: 1) {
  margin-left: percentage($columns / $grid-columns);
}

// Push
@mixin grid-push($columns: 1) {
  position: relative;
  left: percentage($columns / $grid-columns);
  right: auto;
}

// Pull
@mixin grid-pull($columns: 1) {
  position: relative;
  right: percentage($columns / $grid-columns);
  left: auto;
}

// Centered
@mixin grid-align($align) {
  @if($align == center) {
    margin-right: auto;
    margin-left: auto;
    float: none;

  } @elseif($align == left) {
    float: left;

  } @elseif($align == right) {
    float: right;
  }
}

@mixin grid-classes($bp: null) {
  // @if($grid-classes == true) {
  @if($bp == null) {

    // Row
    .l-grid__row {
      @include grid-row();
    }

    // Columns
    .l-grid__col {
      @include grid-column($grid-columns);
      padding-right: rem($grid-gutter / 2);
      padding-left: rem($grid-gutter / 2);
      float: left;
    }

    // Offset, push and pull resets
    .l-grid__col--offset-reset {
      margin-left: 0;
    }

    .l-grid__col--push-reset {
      left: auto;
    }

    .l-grid__col--pull-reset {
      right: auto;
    }

    // Centered, Left, Right Columns
    .l-grid__col--align-centered {
      @include grid-align(center);
    }

    .l-grid__col--align-right {
      @include grid-align(right);
    }

    .l-grid__col--align-left {
      @include grid-align(left);
    }
  }

  @if($bp) {
    // Offset, push and pull resets
    .l-grid__col--offset-reset--bp-#{$bp} {
      margin-left: 0;
    }

    .l-grid__col--push-reset--bp-#{$bp} {
      left: auto;
    }

    .l-grid__col--pull-reset--bp-#{$bp} {
      right: auto;
    }

    // Centered, Left and Right alignments
    .l-grid__col--align-centered--bp-#{$bp} {
      @include grid-align(center);
    }

    .l-grid__col--align-left--bp-#{$bp} {
      @include grid-align(left);
    }

    .l-grid__col--align-right--bp-#{$bp} {
      @include grid-align(right);
    }
  }

  @for $i from 1 through $grid-columns {
    @if($bp == null) {
      // Generates column classes
      // .l-grid-[n]
      .l-grid__col-#{$i} {
        @include grid-column($columns: $i);
      }

      // Generates column offset classes
      // .l-grid__col--offset-[n]
      .l-grid__col--offset-#{$i} {
        @include grid-offset($columns: $i);
      }

      // Generates column push classes
      // .l-grid__col--push-[n]
      .l-grid__col--push-#{$i} {
        @include grid-push($columns: $i);
      }

      // Generates column push classes
      // .l-grid__col--pull-[n]
      .l-grid__col--pull-#{$i} {
        @include grid-pull($columns: $i);
      }
    }

    @if($bp) {
      // Generates responsive column classes
      // .l-grid__col-[n]--[breakpoint]
      .l-grid__col-#{$i}--bp-#{$bp} {
        @include grid-column($columns: $i);
      }

      // Generates responsive column offset classes
      // .l-grid__col--offset-[n]--[breakpoint]
      .l-grid__col--offset-#{$i}--bp-#{$bp} {
        @include grid-offset($columns: $i);
      }

      // Generates responsive column offset classes
      // .l-grid__col-push-[n]--[breakpoint]
      .l-grid__col--push-#{$i}--bp-#{$bp} {
        @include grid-push($columns: $i);
      }

      // Generates responsive column offset classes
      // .l-grid__col-pull-[n]--[breakpoint]
      .l-grid__col--pull-#{$i}--bp-#{$bp} {
        @include grid-pull($columns: $i);
      }
    }
  }
  // }
}
